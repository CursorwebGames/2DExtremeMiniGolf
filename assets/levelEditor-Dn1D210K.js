import{n as M,W as I,a as U,I as V,B as C,b as N,P as W,c as D,d as J,M as v,e as H,S as q,H as j,g as R,G as _,T as G,p as $}from"./transitionManager-DFuzmtEh.js";import"./p5-CLnVVuBm.js";class Y{pos;scale;initialPos;offset;constructor(){this.pos=createVector(width/2,height/2),this.offset=null,this.initialPos=null,this.scale=1}draw(){translate(width/2,height/2),scale(this.scale),translate(-this.pos.x,-this.pos.y),this.offset?window.mousePos=p5.Vector.sub(this.offset,createVector(mouseX,mouseY)).div(this.scale):window.mousePos=createVector(mouseX,mouseY).sub(createVector(width/2,height/2)).div(this.scale).add(this.pos),this.offset&&(this.pos=window.mousePos.add(this.initialPos))}drawGrid(){push(),strokeWeight(1);for(let t=w(this.pos.x-width/2/this.scale);t<=w(this.pos.x+width/2/this.scale);t+=25)stroke(255,t%50==0?125:50),line(t,this.pos.y-height/2/this.scale,t,this.pos.y+height/2/this.scale);for(let t=w(this.pos.y-height/2/this.scale);t<=w(this.pos.y+height/2/this.scale);t+=25)stroke(255,t%50==0?125:50),line(this.pos.x-width/2/this.scale,t,this.pos.x+width/2/this.scale,t);pop()}beginMove(){this.initialPos=this.pos.copy(),this.offset=createVector(mouseX,mouseY)}endMove(){this.initialPos=null,this.offset=null}changeScale(t){t>0?this.scale*=.9:this.scale*=1.1}}function w(o){return round(o/50)*50}class r{pos;parent;r;dragStart;startPos;constructor(t,e){this.pos=createVector(t,e),this.checkSnapping(),this.r=4,this.dragStart=null,this.startPos=null}draw(){push(),this.mouseOver()?(strokeWeight(1),stroke(0),fill(0,138,124)):fill(0,186,168),circle(this.pos.x,this.pos.y,this.r*2),pop()}startDrag(){this.dragStart=window.mousePos,this.startPos=this.pos.copy()}drag(){const t=p5.Vector.sub(window.mousePos,this.dragStart),e=this.pos.copy(),s=p5.Vector.add(this.startPos,t);this.pos=s,this.checkSnapping(),this.parent.update(this,p5.Vector.sub(this.pos,e))}endDrag(){this.dragStart=null,this.startPos=null}mouseOver(){return this.pos.dist(window.mousePos)<this.r*2}checkSnapping(){keyIsPressed&&(key=="Shift"&&(this.pos=this.snap(this.pos)),key=="Control"&&(this.pos=this.snap(this.pos,25)))}snap(t,e=50){return createVector(round(t.x/e)*e,round(t.y/e)*e)}}const g=Object.fromEntries(Object.entries(M).map(([o,t])=>[t.name,o]));class B{editor;vknots;constructor(t,e=[]){this.editor=t,this.vknots=[];for(const[s,n]of e)this.vknots.push(new r(s,n));t.registerKnots(this,...this.vknots)}addPoint(t,e){const s=new r(t,e),n=this.vknots;if(n.length<2)n.push(s);else{let i=1/0,c=0;const P=s.pos;for(let d=0;d<n.length;d++){const p=n[d].pos,f=n[(d+1)%n.length].pos,T=p5.Vector.sub(P,p),b=p5.Vector.sub(f,p),y=b.setMag(T.dot(b)/b.mag()).add(p),S=y.dist(P);y.dist(p)+y.dist(f)>=p.dist(f)+5||S<i&&(c=d+1,i=S)}n.splice(c,0,s)}this.editor.registerKnots(this,s),this.updatePolygon(!0)}removePoint(){for(let t=this.vknots.length-1;t>=0;t--){const e=this.vknots[t];if(e.mouseOver()){this.vknots.splice(t,1),this.editor.deregisterKnot(e),this.updatePolygon(!0);break}}}convertKnots(){return this.vknots.map(t=>[t.pos.x,t.pos.y])}}class h extends B{obj;editor;vknots;centerKnot;constructor(t,e){super(e),this.obj=t,this.vknots=[],this.centerKnot=new r(0,0);for(const[s,n]of t.points)this.vknots.push(new r(s,n));this.calcCenter(),e.registerKnots(this,...this.vknots,this.centerKnot),this.editor=e}draw(){this.obj.draw();for(const t of this.vknots)t.draw();this.centerKnot.draw()}update(t,e){if(t==this.centerKnot)for(const s of this.vknots)s.pos.add(e);else this.calcCenter();this.updatePolygon(!1)}updatePolygon(t){if(t&&this.calcCenter(),this.obj instanceof I){const e=this.centerKnot.pos.x,s=this.centerKnot.pos.y;this.obj.cx=e,this.obj.cy=s;const n=[];for(const i of this.vknots)n.push([i.pos.x-e,i.pos.y-s]);this.obj.render=n}this.obj.points=this.convertKnots()}calcCenter(){let t=0,e=0;for(const s of this.vknots)t+=s.pos.x,e+=s.pos.y;t/=this.vknots.length,e/=this.vknots.length,this.centerKnot.pos=createVector(t,e)}toJSON(){const t=g[this.obj.constructor.name],e=this.convertKnots();return[t,[e]]}}class l{obj;posKnot;dimKnot;centerKnot;constructor(t,e){this.obj=t,this.posKnot=new r(this.obj.x,this.obj.y),this.dimKnot=new r(this.obj.x+this.obj.w,this.obj.y+this.obj.h),this.centerKnot=new r(this.obj.x+this.obj.w/2,this.obj.y+this.obj.h/2),e.registerKnots(this,this.posKnot,this.dimKnot,this.centerKnot)}draw(){this.obj.draw(),this.posKnot.draw(),this.dimKnot.draw(),this.centerKnot.draw()}update(t){if(t==this.posKnot)this.obj.x=this.posKnot.pos.x,this.obj.y=this.posKnot.pos.y;else if(t==this.centerKnot){this.obj.x=this.centerKnot.pos.x-this.obj.w/2,this.obj.y=this.centerKnot.pos.y-this.obj.h/2,this.posKnot.pos=createVector(this.obj.x,this.obj.y),this.dimKnot.pos=createVector(this.obj.x+this.obj.w,this.obj.y+this.obj.h);return}const e=p5.Vector.sub(this.dimKnot.pos,this.posKnot.pos);this.obj.w=e.x,this.obj.h=e.y,this.centerKnot.pos=createVector(this.obj.x+this.obj.w/2,this.obj.y+this.obj.h/2)}toJSON(){const t=g[this.obj.constructor.name],e=this.posKnot.pos,s=this.dimKnot.pos.x-e.x,n=this.dimKnot.pos.y-e.y;return[t,[e.x,e.y,s,n]]}}class m{obj;knot;constructor(t,e){this.obj=t,this.knot=new r(t.pos.x,t.pos.y),e.registerKnots(this,this.knot)}draw(){this.obj.draw(),this.knot.draw()}update(t){this.obj.pos=t.pos.copy()}toJSON(t=this.obj.constructor.name){const e=g[t],s=this.knot.pos;return[e,[s.x,s.y]]}}class K{obj;startKnot;endKnot;constructor(t,e){this.obj=t,this.startKnot=new r(t.start.x,t.start.y),this.endKnot=new r(t.end.x,t.end.y),e.registerKnots(this,this.endKnot,this.startKnot)}draw(){this.obj.draw(),this.endKnot.draw(),this.startKnot.draw()}update(t){t==this.startKnot&&(this.obj.start=t.pos.copy()),t==this.endKnot&&(this.obj.end=t.pos.copy())}toJSON(){const t=g[this.obj.constructor.name],e=this.startKnot.pos,s=this.endKnot.pos;return[t,[s.x,s.y,e.x,e.y]]}}const O=[{name:"Square Wall",cls:l,createUI:(o,t,e)=>new l(new U(o,t,30,30),e)},{name:"Ice",cls:l,createUI:(o,t,e)=>new l(new V(o,t,30,30),e)},{name:"Bouncer",cls:m,createUI:(o,t,e)=>new m(new C(o,t),e)},{name:"Slope",cls:l,createUI:(o,t,e)=>new l(new N(o,t,30,30,[1,0]),e),createHTML:X},{name:"Polygon Wall",cls:h,createUI:(o,t,e)=>{const s=new h(new W([]),e);return e.currEditPolygon=s,s},createHTML:x},{name:"Water",cls:h,createUI:(o,t,e)=>{const s=new h(new I([]),e);return e.currEditPolygon=s,s},createHTML:x},{name:"Sand",cls:h,createUI:(o,t,e)=>{const s=new h(new D([]),e);return e.currEditPolygon=s,s},createHTML:x},{name:"Teleporter",cls:K,createUI:(o,t,e)=>new K(new J(o,t,o,t),e)}],F=Object.fromEntries(O.map(({name:o,cls:t})=>[o,t]));function k(o,t,e){const s=document.createElement("div"),n=document.createElement("input");n.value=t;const i=document.createElement("button");return i.innerHTML="&times;",i.addEventListener("click",()=>{e.removeUI(o),s.remove()}),s.append(n,i),s}function X(o,t,e){const s=k(o,t,e),n=document.createElement("button");return n.textContent="rotate",n.addEventListener("click",()=>{o.obj.force.rotate(PI/2)}),s.append(n),s}function x(o,t,e){const s=k(o,t,e),n=document.createElement("button");return n.textContent="edit",n.addEventListener("click",()=>{e.currEditPolygon=o}),s.append(n),s}class E extends B{constructor(t,e){e||(e=[[0,0],[width,0],[width,height],[0,height]]),super(t,e)}draw(){push(),fill(94,230,83),strokeWeight(3),stroke(0,.25*255),beginShape();for(const t of this.vknots)vertex(t.pos.x+1.5,t.pos.y+1.5);endShape(CLOSE),pop(),push(),noFill(),strokeWeight(3),stroke(255),beginShape();for(const t of this.vknots)vertex(t.pos.x,t.pos.y);endShape(CLOSE),pop();for(const t of this.vknots)t.draw()}update(){}updatePolygon(){}toJSON(){return this.convertKnots()}}class L extends m{constructor(t,e){super(t,e),this.obj=new z(t)}toJSON(){return super.toJSON(v.name)}}class z extends H{constructor(t){super(t.pos.x,t.pos.y,t.r)}draw(){super.draw()}}class u extends q{knots;ball;hole;obstacleUIs;currEditPolygon;camera;levelBounds;constructor(){super(),this.knots=[],this.levelBounds=new E(this),this.hole=new m(new j(width-100,height-100),this),this.ball=new L(new v(100,100),this),this.obstacleUIs=[],this.camera=new Y,this.currEditPolygon=null}importLevel(t){this.knots=[],this.hole=new m(new j(...t.hole),this),this.ball=new L(new v(...t.ball),this);for(const[e,s]of t.obstacles){const n=F[e],i=M[e],c=new n(new i(...s));this.obstacleUIs.push(c)}this.levelBounds=new E(this,t.bounds),console.log(this.knots)}draw(){background(161,207,161),push(),this.camera.draw(),this.levelBounds.draw(),this.camera.drawGrid(),this.hole.draw(),this.ball.draw();for(const t of this.obstacleUIs)t.draw();pop(),this.currEditPolygon&&(fill(0),textAlign(CENTER),textSize(20),text(`Left click to add vertex, Right click to remove vertex
Esc to finish`,width/2,30))}registerKnots(t,...e){for(const s of e)s.parent=t,this.knots.push(s)}deregisterKnot(t){const e=this.knots.indexOf(t);this.knots.splice(e,1)}removeUI(t){const e=this.obstacleUIs.indexOf(t);for(const s of this.knots)s.parent==t&&this.deregisterKnot(s);this.obstacleUIs.splice(e,1)}mousePressed(){if(mouseButton==CENTER){this.camera.beginMove();return}if(mouseButton==LEFT)for(let e=this.knots.length-1;e>=0;e--){const s=this.knots[e];if(s.mouseOver()){s.startDrag();return}}if(!this.currEditPolygon)return;let t=this.currEditPolygon;mouseButton==LEFT?t.addPoint(window.mousePos.x,window.mousePos.y):mouseButton==RIGHT&&t.removePoint()}mouseDragged(){for(const t of this.knots)if(t.dragStart){t.drag();break}}mouseReleased(){for(const t of this.knots)t.endDrag();this.camera.endMove()}mouseWheel(t){this.camera.changeScale(t.deltaY)}keyPressed(){this.currEditPolygon&&key=="Escape"&&(this.currEditPolygon=null)}getLevelData(){return{ball:[this.ball.knot.pos.x,this.ball.knot.pos.y],hole:[this.hole.knot.pos.x,this.hole.knot.pos.y],bounds:this.levelBounds.toJSON(),obstacles:this.obstacleUIs.map(e=>e.toJSON()),par:0}}}class A{editorManager;objPalette;objList;playBtn;editBoundsBtn;exportBtn;exportTextarea;copyExportBtn;importIdxInput;importLevelBtn;constructor(t){this.editorManager=t,this.objPalette=document.querySelector(".object-palette"),this.objList=document.querySelector(".objects-list"),this.playBtn=document.querySelector(".play-btn"),this.editBoundsBtn=document.querySelector(".edit-bound-btn"),this.exportBtn=document.querySelector(".export-btn"),this.exportTextarea=document.querySelector(".export-text"),this.copyExportBtn=document.querySelector(".copy-export-btn"),this.importIdxInput=document.querySelector(".import-idx"),this.importLevelBtn=document.querySelector(".import-level")}init(){this.createObjPalette(),this.playBtn.addEventListener("click",()=>{this.editorManager.togglePlayMode()}),this.editBoundsBtn.addEventListener("click",()=>{const t=this.editorManager.scene;t instanceof u&&(t.currEditPolygon=t.levelBounds)}),this.exportBtn.addEventListener("click",()=>this.exportLevel()),this.copyExportBtn.addEventListener("click",async()=>await this.copyExport()),this.importLevelBtn.addEventListener("click",()=>this.importLevel())}createObjPalette(){for(const t of O){const e=document.createElement("button");e.textContent=t.name,e.addEventListener("click",()=>{const s=this.editorManager.scene;if(!(s instanceof u))return;const n=t.createUI(s.camera.pos.x,s.camera.pos.y,s);s.obstacleUIs.push(n);const c=(t.createHTML||k)(n,t.name,s);this.objList.append(c)}),this.objPalette.append(e)}}exportLevel(){const e=this.editorManager.editorScene.getLevelData();let s=`{
    "ball": ${this.formatJSON(e.ball)},
    "hole": ${this.formatJSON(e.hole)},
    "obstacles": ${this.formatJSON(e.obstacles)},
    "bounds": ${this.formatJSON(e.bounds)},
    "par": 0
},`;this.exportTextarea.value=s}importLevel(){const t=Number(this.importIdxInput.value),e=R(t);this.editorManager.scene instanceof u||this.editorManager.togglePlayMode();const s=this.editorManager.scene;e&&s.importLevel(e)}formatJSON(t){return JSON.stringify(t).replace(/:/g,": ").replace(/,/g,", ")}async copyExport(){const t=this.exportTextarea.value;await navigator.clipboard.writeText(t),this.copyExportBtn.textContent="Copied!",setTimeout(()=>{this.copyExportBtn.textContent="Copy"},1e3)}}class Q extends _{editorManager;constructor(t,e){super(null,0),this.loadLevel(t),this.editorManager=e}nextLevel(){this.editorManager.completedPlayMode()}}class Z{scene;htmlManager;editorScene;transitionManager;constructor(){this.editorScene=new u,this.scene=this.editorScene,this.htmlManager=new A(this),this.htmlManager.init(),this.transitionManager=new G}draw(){this.scene.draw(),this.transitionManager.draw()}togglePlayMode(){if(this.scene instanceof u){const t=this.scene.getLevelData();this.scene=new Q(t,this)}else this.scene=this.editorScene}completedPlayMode(){this.transitionManager.transition(()=>{this.scene=this.editorScene})}}window.p5=$;let a;window.setup=()=>{noStroke();const o=createCanvas(.8*windowWidth,windowHeight).parent(document.querySelector(".canvas-content"));o.mousePressed(tt),o.mouseReleased(et),o.mouseWheel(st);const t=o.elt;t.addEventListener("selectstart",e=>e.preventDefault()),t.addEventListener("contextmenu",e=>e.preventDefault()),t.addEventListener("wheel",e=>e.preventDefault()),t.addEventListener("mousedown",e=>{e.button==1&&e.preventDefault()}),a=new Z};window.draw=()=>{a.draw()};function tt(){a.scene.mousePressed()}function et(){a.scene.mouseReleased()}window.mouseDragged=()=>{a.scene.mouseDragged()};function st(o){a.scene.mouseWheel(o)}window.keyPressed=()=>{a.scene.keyPressed()};window.onbeforeunload=()=>"Are you sure you want to leave?";
