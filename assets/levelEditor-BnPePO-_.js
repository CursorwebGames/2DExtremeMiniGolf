import{n as N,M as j,B as q,S as V,H as I,W as P,b as K,I as E,c as L,d as C,P as B,e as M,f as O,g as H,G as _,T as G,a as $}from"./transitionManager-6wVf0hdx.js";import"./p5-CLnVVuBm.js";class Y{pos;scale;initialPos;offset;constructor(){this.pos=createVector(width/2,height/2),this.offset=null,this.initialPos=null,this.scale=1}draw(){translate(width/2,height/2),scale(this.scale),translate(-this.pos.x,-this.pos.y),this.offset?window.mousePos=p5.Vector.sub(this.offset,createVector(mouseX,mouseY)).div(this.scale):window.mousePos=createVector(mouseX,mouseY).sub(createVector(width/2,height/2)).div(this.scale).add(this.pos),this.offset&&(this.pos=window.mousePos.add(this.initialPos))}drawGrid(){push(),strokeWeight(1);for(let t=b(this.pos.x-width/2/this.scale);t<=b(this.pos.x+width/2/this.scale);t+=25)stroke(255,t%50==0?125:50),line(t,this.pos.y-height/2/this.scale,t,this.pos.y+height/2/this.scale);for(let t=b(this.pos.y-height/2/this.scale);t<=b(this.pos.y+height/2/this.scale);t+=25)stroke(255,t%50==0?125:50),line(this.pos.x-width/2/this.scale,t,this.pos.x+width/2/this.scale,t);pop()}beginMove(){this.initialPos=this.pos.copy(),this.offset=createVector(mouseX,mouseY)}endMove(){this.initialPos=null,this.offset=null}changeScale(t){t>0?this.scale*=.9:this.scale*=1.1}}function b(o){return round(o/50)*50}class i{pos;parent;r;dragStart;startPos;constructor(t,e){this.pos=createVector(t,e),this.checkSnapping(),this.r=4,this.dragStart=null,this.startPos=null}draw(){push(),this.mouseOver()?(strokeWeight(1),stroke(0),fill(0,138,124)):fill(0,186,168),circle(this.pos.x,this.pos.y,this.r*2),pop()}startDrag(){this.dragStart=window.mousePos,this.startPos=this.pos.copy()}drag(){const t=p5.Vector.sub(window.mousePos,this.dragStart),e=this.pos.copy(),s=p5.Vector.add(this.startPos,t);this.pos=s,this.checkSnapping(),this.parent.update(this,p5.Vector.sub(this.pos,e))}endDrag(){this.dragStart=null,this.startPos=null}mouseOver(){return this.pos.dist(window.mousePos)<this.r*2}checkSnapping(){if(keyIsPressed){if(key=="Shift"){this.pos=this.snap(this.pos);return}if(key=="Control"){this.pos=this.snap(this.pos,25);return}}this.pos=createVector(round(this.pos.x),round(this.pos.y))}snap(t,e=50){return createVector(round(t.x/e)*e,round(t.y/e)*e)}}class W{editor;vknots;constructor(t,e=[]){this.editor=t,this.vknots=[];for(const[s,n]of e)this.vknots.push(new i(s,n));t.registerKnots(this,...this.vknots)}addPoint(t,e){const s=new i(t,e),n=this.vknots;if(n.length<2)n.push(s);else{let r=1/0,w=0;const g=s.pos;for(let a=0;a<n.length;a++){const h=n[a].pos,d=n[(a+1)%n.length].pos,J=p5.Vector.sub(g,h),x=p5.Vector.sub(d,h),v=x.setMag(J.dot(x)/x.mag()).add(h),S=v.dist(g);v.dist(h)+v.dist(d)>=h.dist(d)+5||S<r&&(w=a+1,r=S)}n.splice(w,0,s)}this.editor.registerKnots(this,s),this.updatePolygon(!0)}removePoint(){for(let t=this.vknots.length-1;t>=0;t--){const e=this.vknots[t];if(e.mouseOver()){this.vknots.splice(t,1),this.editor.deregisterKnot(e),this.updatePolygon(!0);break}}}convertKnots(){return this.vknots.map(t=>[t.pos.x,t.pos.y])}}class U extends W{constructor(t,e){e||(e=[[0,0],[width,0],[width,height],[0,height]]),super(t,e)}draw(){push(),fill(94,230,83),strokeWeight(3),stroke(0,.25*255),beginShape();for(const t of this.vknots)vertex(t.pos.x+1.5,t.pos.y+1.5);endShape(CLOSE),pop(),push(),noFill(),strokeWeight(3),stroke(255),beginShape();for(const t of this.vknots)vertex(t.pos.x,t.pos.y);endShape(CLOSE),pop();for(const t of this.vknots)t.draw()}update(){}updatePolygon(){}toJSON(){return this.convertKnots()}}const f=Object.fromEntries(Object.entries(N).map(([o,t])=>[t.name,o]));class m{obj;knot;constructor(t,e){this.obj=t,this.knot=new i(t.pos.x,t.pos.y),e.registerKnots(this,this.knot)}draw(){this.obj.draw(),this.knot.draw()}update(t){this.obj.pos=t.pos.copy()}toJSON(t=this.obj.constructor.name){const e=f[t],s=this.knot.pos;return[e,[s.x,s.y]]}}class T extends m{constructor(t,e){super(t,e),this.obj=new F(t)}toJSON(){return super.toJSON(j.name)}}class F extends q{constructor(t){super(t.pos.x,t.pos.y,t.r)}draw(){super.draw()}}class c extends V{knots;ball;hole;obstacleUIs;currEditPolygon;camera;levelBounds;constructor(){super(),this.knots=[],this.levelBounds=new U(this),this.hole=new m(new I(width-100,height-100),this),this.ball=new T(new j(100,100),this),this.obstacleUIs=[],this.camera=new Y,this.currEditPolygon=null}importLevel(t){this.knots=[],this.hole=new m(new I(...t.hole),this),this.ball=new T(new j(...t.ball),this),this.levelBounds=new U(this,t.bounds),console.log(this.knots)}draw(){background(161,207,161),push(),this.camera.draw(),this.levelBounds.draw(),this.camera.drawGrid(),this.hole.draw(),this.ball.draw();for(const t of this.obstacleUIs)t.draw();pop(),this.currEditPolygon&&(fill(0),textAlign(CENTER),textSize(20),text(`Left click to add vertex, Right click to remove vertex
Esc to finish`,width/2,30))}registerKnots(t,...e){for(const s of e)s.parent=t,this.knots.push(s)}deregisterKnot(t){const e=this.knots.indexOf(t);this.knots.splice(e,1)}removeUI(t){const e=this.obstacleUIs.indexOf(t);for(const s of this.knots)s.parent==t&&this.deregisterKnot(s);this.obstacleUIs.splice(e,1)}mousePressed(){if(mouseButton==CENTER){this.camera.beginMove();return}if(mouseButton==LEFT)for(let e=this.knots.length-1;e>=0;e--){const s=this.knots[e];if(s.mouseOver()){s.startDrag();return}}if(!this.currEditPolygon)return;let t=this.currEditPolygon;mouseButton==LEFT?t.addPoint(window.mousePos.x,window.mousePos.y):mouseButton==RIGHT&&t.removePoint()}mouseDragged(){for(const t of this.knots)if(t.dragStart){t.drag();break}}mouseReleased(){for(const t of this.knots)t.endDrag();this.camera.endMove()}mouseWheel(t){this.camera.changeScale(t.deltaY)}keyPressed(){this.currEditPolygon&&key=="Escape"&&(this.currEditPolygon=null)}getLevelData(){return{ball:[this.ball.knot.pos.x,this.ball.knot.pos.y],hole:[this.hole.knot.pos.x,this.hole.knot.pos.y],bounds:this.levelBounds.toJSON(),obstacles:this.obstacleUIs.map(e=>e.toJSON()),par:0}}}class p extends W{obj;editor;vknots;centerKnot;constructor(t,e){super(e),this.obj=t,this.vknots=[],this.centerKnot=new i(0,0);for(const[s,n]of t.points)this.vknots.push(new i(s,n));this.calcCenter(),e.registerKnots(this,...this.vknots,this.centerKnot),this.editor=e}draw(){this.obj.draw();for(const t of this.vknots)t.draw();this.centerKnot.draw()}update(t,e){if(t==this.centerKnot)for(const s of this.vknots)s.pos.add(e);else this.calcCenter();this.updatePolygon(!1)}updatePolygon(t){if(t&&this.calcCenter(),this.obj instanceof P){const e=this.centerKnot.pos.x,s=this.centerKnot.pos.y;this.obj.cx=e,this.obj.cy=s;const n=[];for(const r of this.vknots)n.push([r.pos.x-e,r.pos.y-s]);this.obj.render=n}this.obj.points=this.convertKnots()}calcCenter(){let t=0,e=0;for(const s of this.vknots)t+=s.pos.x,e+=s.pos.y;t/=this.vknots.length,e/=this.vknots.length,this.centerKnot.pos=createVector(t,e)}toJSON(){const t=f[this.obj.constructor.name],e=this.convertKnots();return[t,[e]]}}class u{obj;posKnot;dimKnot;centerKnot;constructor(t,e){this.obj=t,this.posKnot=new i(this.obj.x,this.obj.y),this.dimKnot=new i(this.obj.x+this.obj.w,this.obj.y+this.obj.h),this.centerKnot=new i(this.obj.x+this.obj.w/2,this.obj.y+this.obj.h/2),e.registerKnots(this,this.posKnot,this.dimKnot,this.centerKnot)}draw(){this.obj.draw(),this.posKnot.draw(),this.dimKnot.draw(),this.centerKnot.draw()}update(t){if(t==this.posKnot)this.obj.x=this.posKnot.pos.x,this.obj.y=this.posKnot.pos.y;else if(t==this.centerKnot){this.obj.x=this.centerKnot.pos.x-this.obj.w/2,this.obj.y=this.centerKnot.pos.y-this.obj.h/2,this.posKnot.pos=createVector(this.obj.x,this.obj.y),this.dimKnot.pos=createVector(this.obj.x+this.obj.w,this.obj.y+this.obj.h);return}const e=p5.Vector.sub(this.dimKnot.pos,this.posKnot.pos);this.obj.w=e.x,this.obj.h=e.y,this.centerKnot.pos=createVector(this.obj.x+this.obj.w/2,this.obj.y+this.obj.h/2)}toJSON(){const t=f[this.obj.constructor.name],e=this.posKnot.pos,s=this.dimKnot.pos.x-e.x,n=this.dimKnot.pos.y-e.y;return[t,[e.x,e.y,s,n]]}}class R{obj;startKnot;endKnot;constructor(t,e){this.obj=t,this.startKnot=new i(t.start.x,t.start.y),this.endKnot=new i(t.end.x,t.end.y),e.registerKnots(this,this.endKnot,this.startKnot)}draw(){this.obj.draw(),this.endKnot.draw(),this.startKnot.draw()}update(t){t==this.startKnot&&(this.obj.start=t.pos.copy()),t==this.endKnot&&(this.obj.end=t.pos.copy())}toJSON(){const t=f[this.obj.constructor.name],e=this.startKnot.pos,s=this.endKnot.pos;return[t,[s.x,s.y,e.x,e.y]]}}const X={Bouncer:m,Ice:u,PolygonWall:p,Sand:p,Slope:u,Teleporter:R,Wall:u,Water:p};class y{ui;scene;html;htmlManager;constructor(t,e,s){this.ui=t,this.htmlManager=s;const n=s.editorManager.scene;this.scene=n,this.html=this.createCont(e),s.objListEl.append(this.html),n.obstacleUIs.push(t)}createCont(t){const e=document.createElement("div"),s=document.createElement("input");s.value=t;const n=document.createElement("button");return n.innerHTML="&times;",n.addEventListener("click",()=>this.remove()),e.append(s,n),e}remove(){this.scene instanceof c&&(this.scene.removeUI(this.ui),this.html.remove(),this.htmlManager.removeItem(this))}}class z extends y{constructor(t,e,s){super(t,e,s)}createCont(t){const e=super.createCont(t),s=document.createElement("button");return s.textContent="rotate",s.addEventListener("click",()=>{this.ui.obj.force.rotate(PI/2)}),e.append(s),e}}class k extends y{constructor(t,e,s){super(t,e,s),this.scene.currEditPolygon=t}createCont(t){const e=super.createCont(t),s=document.createElement("button");return s.textContent="edit",s.addEventListener("click",()=>{this.scene instanceof c&&(this.scene.currEditPolygon=this.ui)}),e.append(s),e}}const D=[{name:"Square Wall",objClass:K,createUI:(o,t,e)=>new u(new K(o,t,30,30),e)},{name:"Ice",objClass:E,createUI:(o,t,e)=>new u(new E(o,t,30,30),e)},{name:"Bouncer",objClass:L,createUI:(o,t,e)=>new m(new L(o,t),e)},{name:"Slope",objClass:C,createUI:(o,t,e)=>new u(new C(o,t,30,30,[1,0]),e),ItemClass:z},{name:"Polygon Wall",objClass:B,createUI:(o,t,e)=>new p(new B([]),e),ItemClass:k},{name:"Water",objClass:P,createUI:(o,t,e)=>new p(new P([]),e),ItemClass:k},{name:"Sand",objClass:M,createUI:(o,t,e)=>new p(new M([]),e),ItemClass:k},{name:"Teleporter",objClass:O,createUI:(o,t,e)=>new R(new O(o,t,o,t),e)}],A=Object.fromEntries(D.map(({name:o,objClass:t,ItemClass:e})=>[t.name,{itemName:o,ItemClass:e||y}]));class Q{editorManager;objPaletteEl;objListEl;playBtn;editBoundsBtn;exportBtn;exportTextarea;copyExportBtn;importIdxInput;importLevelBtn;objListItems;constructor(t){this.editorManager=t,this.objPaletteEl=document.querySelector(".object-palette"),this.objListEl=document.querySelector(".objects-list"),this.playBtn=document.querySelector(".play-btn"),this.editBoundsBtn=document.querySelector(".edit-bound-btn"),this.exportBtn=document.querySelector(".export-btn"),this.exportTextarea=document.querySelector(".export-text"),this.copyExportBtn=document.querySelector(".copy-export-btn"),this.importIdxInput=document.querySelector(".import-idx"),this.importLevelBtn=document.querySelector(".import-level"),this.objListItems=[]}init(){this.createObjPalette(),this.playBtn.addEventListener("click",()=>{this.editorManager.togglePlayMode()}),this.editBoundsBtn.addEventListener("click",()=>{const t=this.editorManager.scene;t instanceof c&&(t.currEditPolygon=t.levelBounds)}),this.exportBtn.addEventListener("click",()=>this.exportLevel()),this.copyExportBtn.addEventListener("click",async()=>await this.copyExport()),this.importLevelBtn.addEventListener("click",()=>this.importLevel())}createObjPalette(){for(const t of D){const e=document.createElement("button");e.textContent=t.name,e.addEventListener("click",()=>{const s=this.editorManager.scene;if(!(s instanceof c))return;const n=t.createUI(s.camera.pos.x,s.camera.pos.y,s),r=t.ItemClass||y;this.objListItems.push(new r(n,t.name,this))}),this.objPaletteEl.append(e)}}removeItem(t){const e=this.objListItems.indexOf(t);this.objListItems.splice(e,1)}exportLevel(){const e=this.editorManager.editorScene.getLevelData();let s=`{
    "ball": ${this.formatJSON(e.ball)},
    "hole": ${this.formatJSON(e.hole)},
    "obstacles": ${this.formatJSON(e.obstacles)},
    "bounds": ${this.formatJSON(e.bounds)},
    "par": 0
},`;this.exportTextarea.value=s}importLevel(){const t=Number(this.importIdxInput.value),e=H(t);this.editorManager.scene instanceof c||this.editorManager.togglePlayMode();const s=this.editorManager.scene;if(e){for(const n of this.objListItems)n.remove();s.importLevel(e);for(const[n,r]of e.obstacles){const w=X[n],g=N[n],{itemName:a,ItemClass:h}=A[n],d=new w(new g(...r),s);console.log(d),this.objListItems.push(new h(d,a,this))}}}formatJSON(t){return JSON.stringify(t).replace(/:/g,": ").replace(/,/g,", ")}async copyExport(){const t=this.exportTextarea.value;await navigator.clipboard.writeText(t),this.copyExportBtn.textContent="Copied!",setTimeout(()=>{this.copyExportBtn.textContent="Copy"},1e3)}}class Z extends V{editorManager;gameRenderer;constructor(t,e){super(),this.gameRenderer=new _(t,()=>this.nextLevel()),this.editorManager=e}draw(){this.gameRenderer.draw()}nextLevel(){this.editorManager.completedPlayMode()}mousePressed(){this.gameRenderer.mousePressed()}mouseReleased(){this.gameRenderer.mouseReleased()}}class tt{scene;htmlManager;editorScene;transitionManager;constructor(){this.editorScene=new c,this.scene=this.editorScene,this.htmlManager=new Q(this),this.htmlManager.init(),this.transitionManager=new G}draw(){this.scene.draw(),this.transitionManager.draw()}togglePlayMode(){if(this.scene instanceof c){const t=this.scene.getLevelData();this.scene=new Z(t,this)}else this.scene=this.editorScene}completedPlayMode(){this.transitionManager.transition(()=>{this.scene=this.editorScene})}}window.p5=$;let l;window.setup=()=>{noStroke();const o=createCanvas(.8*windowWidth,windowHeight).parent(document.querySelector(".canvas-content"));o.mousePressed(et),o.mouseReleased(st),o.mouseWheel(ot);const t=o.elt;t.addEventListener("selectstart",e=>e.preventDefault()),t.addEventListener("contextmenu",e=>e.preventDefault()),t.addEventListener("wheel",e=>e.preventDefault()),t.addEventListener("mousedown",e=>{e.button==1&&e.preventDefault()}),l=new tt};window.draw=()=>{l.draw()};function et(){l.scene.mousePressed()}function st(){l.scene.mouseReleased()}window.mouseDragged=()=>{l.scene.mouseDragged()};function ot(o){l.scene.mouseWheel(o)}window.keyPressed=()=>{l.scene.keyPressed()};window.onbeforeunload=()=>"Are you sure you want to leave?";
