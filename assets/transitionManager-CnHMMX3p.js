import{r as C,g as W}from"./p5-CLnVVuBm.js";(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const i of document.querySelectorAll('link[rel="modulepreload"]'))s(i);new MutationObserver(i=>{for(const o of i)if(o.type==="childList")for(const l of o.addedNodes)l.tagName==="LINK"&&l.rel==="modulepreload"&&s(l)}).observe(document,{childList:!0,subtree:!0});function t(i){const o={};return i.integrity&&(o.integrity=i.integrity),i.referrerPolicy&&(o.referrerPolicy=i.referrerPolicy),i.crossOrigin==="use-credentials"?o.credentials="include":i.crossOrigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function s(i){if(i.ep)return;i.ep=!0;const o=t(i);fetch(i.href,o)}})();var M=C();const le=W(M),V=[{ball:[48,45],hole:[297,310],obstacles:[],bounds:[[0,0],[200,0],[400,100],[400,400],[200,400],[200,200],[0,200]],guideText:"Pull back and release",par:2},{ball:[165,182],hole:[989,82],obstacles:[["Wall",[498,1,226,299]],["Teleporter",[882,172,340,181]]],bounds:[[0,0],[1200,0],[1200,300],[0,300]],guideText:"Teleporters teleport you places",par:2},{ball:[80,80],hole:[509,354],obstacles:[["Ice",[0,225,699,56]],["Slope",[378,22,104,184,[0,1]]]],bounds:[[0,0],[700,0],[700,400],[0,400]],guideText:"Ice breaks when you touch it",par:2},{ball:[49,48],hole:[66,1069],obstacles:[["Slope",[42,182,124,137,[0,1]]],["Slope",[313,437,249,115,[1,0]]],["Slope",[738,688,122,228,[0,1]]],["Slope",[215,1037,336,128,[-1,0]]]],bounds:[[0,0],[200,0],[200,400],[700,400],[900,600],[900,1e3],[700,1200],[0,1200],[0,1e3],[700,1e3],[700,600],[200,600],[0,400]],par:2},{ball:[406,43],hole:[406,711],obstacles:[["Bouncer",[128,197]],["Bouncer",[574,102]],["Bouncer",[345,318]],["Bouncer",[116,541]],["Bouncer",[504,669]],["Sand",[[[257,127],[406,291],[543,52]]]],["Sand",[[[344,504],[206,450],[36,495],[69,257],[273,243]]]],["Sand",[[[742,188],[637,242],[515,212],[491,363],[584,488],[752,352]]]],["Sand",[[[385,467],[480,440],[537,514],[514,601],[371,668],[418,549]]]],["Sand",[[[286,556],[170,617],[53,599],[66,724],[263,710]]]],["Bouncer",[433,390]],["Bouncer",[665,171]],["Bouncer",[188,68]],["Bouncer",[745,430]],["Bouncer",[237,522]],["Bouncer",[341,607]],["Bouncer",[658,499]],["Bouncer",[591,581]]],bounds:[[0,0],[800,0],[800,550],[550,750],[0,750]],par:7},{ball:[-25,54],hole:[541,698],obstacles:[["PolygonWall",[[[373,683],[485,705],[377,749],[327,712],[366,557]]]],["Slope",[112,247,181,140,[0,1]]]],bounds:[[-100,0],[300,0],[300,400],[500,600],[700,600],[600,800],[300,800],[300,600],[100,400],[100,200],[-100,200]],par:3},{ball:[240,108],hole:[396,553],obstacles:[["PolygonWall",[[[356,390],[395,471],[430,388],[523,379],[455,317],[467,234],[390,274],[310,235],[330,320],[254,367]]]],["Bouncer",[391,131]],["Bouncer",[208,266]],["Bouncer",[260,503]],["Bouncer",[540,497]],["Bouncer",[565,234]]],bounds:[[150,0],[500,0],[650,150],[650,600],[150,600]],par:5},{ball:[70,705],hole:[505,269],obstacles:[["Water",[[[546,250],[543,741],[56,740]]]]],bounds:[[550,200],[550,750],[0,750]],guideText:"Don't touch the water!",par:2},{ball:[399,152],hole:[805,150],obstacles:[["Ice",[335,3,28,296]],["Ice",[437,3,29,296]],["Ice",[487,3,25,296]],["Ice",[286,3,28,296]],["Ice",[232,3,31,296]],["Ice",[182,3,37,296]],["Ice",[137,3,31,296]],["Ice",[532,3,33,296]],["Ice",[579,3,34,296]],["Ice",[633,3,34,296]]],bounds:[[0,0],[750,0],[750,100],[850,100],[850,200],[750,200],[750,300],[0,300]],par:5},{ball:[61,195],hole:[956,55],obstacles:[["Bouncer",[235,56]],["Bouncer",[398,186]],["Bouncer",[595,58]],["Bouncer",[783,187]]],bounds:[[0,0],[1050,0],[1050,250],[0,250]],par:4},{ball:[26,166],hole:[197,657],obstacles:[["Teleporter",[720,188,92,177]],["Teleporter",[89,317,728,327]],["Teleporter",[730,473,92,454]],["Teleporter",[89,596,729,601]],["PolygonWall",[[[35,610],[35,715],[143,716]]]],["Slope",[68,9,41,119,[0,1]]],["Wall",[2,520,700,42]]],bounds:[[0,0],[800,0],[800,750],[0,750]],par:2},{ball:[69,162],hole:[1218,113],obstacles:[],bounds:[[50,0],[150,150],[250,0],[350,150],[450,0],[550,150],[650,0],[750,150],[850,0],[950,150],[1050,0],[1150,150],[1250,0],[1250,150],[1150,300],[1050,150],[950,300],[850,150],[750,300],[650,150],[550,300],[450,150],[350,300],[250,150],[150,300],[50,200]],par:6},{ball:[100,100],hole:[350,500],obstacles:[["Teleporter",[300,100,100,350]],["Teleporter",[300,150,100,500]],["Teleporter",[300,50,100,650]],["Wall",[0,200,200,100]]],bounds:[[0,0],[450,0],[450,200],[200,200],[200,300],[450,300],[450,400],[200,400],[200,450],[450,450],[450,550],[200,550],[200,600],[450,600],[450,700],[0,700]],par:2},{ball:[666,160],hole:[691,757],obstacles:[["Bouncer",[377,282]],["Bouncer",[446,377]],["Bouncer",[510,471]],["Bouncer",[597,368]],["Bouncer",[516,271]],["Bouncer",[602,565]],["Bouncer",[681,467]],["Bouncer",[834,465]],["Bouncer",[749,559]],["Bouncer",[675,664]],["Bouncer",[741,364]],["Bouncer",[865,360]],["Bouncer",[670,272]],["Bouncer",[808,259]],["Bouncer",[935,245]],["Slope",[174,13,897,92,[0,1]]]],bounds:[[1100,0],[100,0],[700,900]],par:4},{ball:[80,80],hole:[391,63],obstacles:[["Sand",[[[243,17],[134,12],[121,59],[149,97],[202,128],[281,84],[311,34]]]]],bounds:[[0,0],[526,-2],[528,168],[3,177]],par:2},{ball:[-50,50],hole:[250,300],bounds:[[50,0],[50,-100],[200,-100],[200,0],[300,0],[300,75],[375,75],[375,200],[300,200],[300,350],[200,350],[200,250],[150,250],[150,350],[0,350],[0,250],[0,100],[-100,100],[-100,0]],obstacles:[["Bouncer",[125,25]],["Bouncer",[50,100]],["Bouncer",[200,100]],["Bouncer",[125,175]]],par:4},{ball:[58,-847],hole:[594,186],obstacles:[["Slope",[444,-494,323,488,[0,1]]],["Bouncer",[175,-646]],["Bouncer",[423,-846]],["Bouncer",[705,-638]],["Bouncer",[828,-772]],["PolygonWall",[[[251,-795],[302,-559],[522,-646],[570,-539],[647,-759],[379,-661]]]],["Water",[[[268,85],[405,145],[401,50]]]],["Water",[[[819,41],[953,35],[856,148]]]],["PolygonWall",[[[973,-821],[997,-779],[991,-706],[968,-664],[889,-597],[827,-665],[903,-691],[953,-758],[892,-830],[799,-845],[926,-848]]]]],bounds:[[0,0],[400,0],[400,-500],[200,-500],[0,-700],[0,-900],[500,-900],[1100,-900],[1100,-700],[800,-500],[800,0],[1200,0],[600,300]],par:5},{ball:[95,145],hole:[280,479],obstacles:[["Wall",[4,346,195,48]],["Teleporter",[167,437,99,230]],["Water",[[[22,440],[73,429],[101,512],[17,543]]]],["Bouncer",[176,622]]],bounds:[[0,100],[200,100],[200,400],[400,400],[400,700],[0,700]],par:3},{ball:[80,80],hole:[1149,666],obstacles:[["Sand",[[[1032,198],[981,252],[720,248],[602,264],[529,242],[490,100],[626,150],[989,56]]]],["Sand",[[[1109,448],[1093,349],[677,476],[733,676]]]],["Water",[[[544,485],[53,436],[83,708],[534,679]]]],["Bouncer",[220,108]],["Ice",[928,621,164,62]],["Ice",[1099,515,120,94]],["Ice",[1003,555,92,62]],["Teleporter",[482,363,28,33]],["Wall",[620,296,621,31]],["Wall",[617,411,28,329]],["Slope",[312,16,134,311,[1,0]]]],bounds:[[0,0],[1250,0],[1250,750],[0,750]],par:7},{ball:[58,60],hole:[441,364],obstacles:[["Water",[[[438,78],[379,-66],[209,-14]]]],["Bouncer",[274,128]],["Bouncer",[284,306]],["Sand",[[[55,312],[30,518],[204,448],[159,346]]]],["Bouncer",[125,205]],["PolygonWall",[[[251,171],[251,241],[193,207]]]]],bounds:[[0,0],[400,-100],[600,350],[0,600]],par:3},{ball:[149,100],hole:[998,102],obstacles:[["PolygonWall",[[[63,219],[25,295],[19,378],[99,372],[251,285],[121,274]]]],["PolygonWall",[[[267,127],[287,239],[253,168],[186,164]]]],["PolygonWall",[[[167,504],[145,379],[93,475],[158,556],[284,581]]]],["Slope",[301,439,547,233,[1,0]]],["PolygonWall",[[[914,340],[910,386],[958,430],[950,355],[1004,317]]]],["PolygonWall",[[[1055,266],[1074,368],[1014,407],[1122,382]]]],["PolygonWall",[[[900,153],[1046,188],[943,202],[932,312]]]]],bounds:[[0,0],[300,0],[300,400],[850,400],[850,0],[1150,0],[1150,450],[850,750],[300,750],[0,450]],par:6}];function p(r,e,t,s){return r.dist(t)<=e+s}function S(r,e,t,s,i,o,l){let h,a;r<s?h=s:r>s+o?h=s+o:h=r,e<i?a=i:e>i+l?a=i+l:a=e;const n=r-h,T=e-a;return Math.sqrt(n**2+T**2)<t}function I(r,e,t,s){const i=p5.Vector.sub(r,t),o=p5.Vector.sub(s,t),l=o.setMag(i.dot(o)/o.mag()).add(t);return l.dist(t)+l.dist(s)>t.dist(s)+e?!1:l.dist(r)<e?l:!1}function f(r,e,t){for(let s=0;s<t.length;s++){const i=(s+1)%t.length,o=createVector(...t[s]),l=createVector(...t[i]),h=I(r,e,o,l);if(h)return{projPoint:h,edge:p5.Vector.sub(l,o)}}return!1}function R(r,e){let t=!1;const s=r.x,i=r.y;for(let o=0;o<e.length;o++){const l=(o+1)%e.length,h=createVector(...e[o]),a=createVector(...e[l]);(h.y>=i&&a.y<i||h.y<i&&a.y>=i)&&s<(a.x-h.x)*(i-h.y)/(a.y-h.y)+h.x&&(t=!t)}return t}function B(r,e,t,s,i,o){return r>=t&&e>=s&&r<=t+i&&e<=s+o}class P{x;y;w;h;constructor(e,t,s,i){this.x=e,this.y=t,this.w=s,this.h=i}draw(){fill(0,.25*255),rect(this.x+1.5,this.y+1.5,this.w,this.h),fill(255),rect(this.x,this.y,this.w,this.h)}collide(e){let t=e.pos.x,s=e.pos.y;t<this.x&&(e.vel.x*=-1,e.pos.x=this.x-e.r),t>this.x+this.w&&(e.vel.x*=-1,e.pos.x=this.x+this.w+e.r),s<this.y&&(e.vel.y*=-1,e.pos.y=this.y-e.r),s>this.y+this.h&&(e.vel.y*=-1,e.pos.y=this.y+this.h+e.r)}isColliding(e){return S(e.pos.x,e.pos.y,e.r,this.x,this.y,this.w,this.h)}}const m=7;class E{pos;r;hit;constructor(e,t){this.pos=createVector(e,t),this.r=30,this.hit=0}draw(){let e=this.hit;push(),translate(this.pos.x,this.pos.y),scale(1+e/25),fill(0,.25*255),circle(1.5,1.5,this.r*2+e),fill(255,255,0),circle(0,0,this.r*2+e),fill(150,150,0),circle(0,0,10),rotate(e/10);for(let t=0;t<m;t++)rotate(2*PI/m),triangle(0,-20,5,-15,-5,-15),rect(-2.5,-16,5,5);pop(),this.hit>0&&this.hit--}isColliding(e){return p(e.pos,e.r,this.pos,this.r)}collide(e){let t=p5.Vector.sub(e.pos,this.pos);e.applyForce(t.setMag(16)),this.hit=10}}class D extends P{disabled;shatter;normal;mag;constructor(e,t,s,i){super(e,t,s,i),this.disabled=!1,this.shatter=createVector(this.x,this.y),this.normal=createVector(0,0),this.mag=max(s,i)}draw(){if(!this.disabled)push(),strokeWeight(8),stroke(58,132,181,125),fill(145,204,242,200),rect(this.x+4,this.y+4,this.w-8,this.h-8),pop();else{push(),strokeWeight(4),stroke(255,125),fill(123,0,255,20),rect(this.x+1,this.y+1,this.w-2,this.h-2),beginClip(),rect(this.x+1,this.y+1,this.w-2,this.h-2),endClip(),strokeWeight(4),stroke(255,100);for(let e=0;e<PI/2;e+=.5){let t=p5.Vector.rotate(this.normal,e).mult(this.mag).add(this.shatter);line(this.shatter.x,this.shatter.y,t.x,t.y),e!=0&&(t=p5.Vector.rotate(this.normal,-e).mult(this.mag).add(this.shatter),line(this.shatter.x,this.shatter.y,t.x,t.y))}pop()}}collide(e){let t=e.pos.x,s=e.pos.y;t<this.x&&(this.shatter.y=e.pos.y,this.normal=createVector(1,0)),t>this.x+this.w&&(this.shatter.x=this.x+this.w,this.shatter.y=e.pos.y,this.normal=createVector(-1,0)),s<this.y&&(this.shatter.x=e.pos.x,this.normal=createVector(0,1)),s>this.y+this.h&&(this.shatter.y=this.y+this.h,this.shatter.x=e.pos.x,this.normal=createVector(0,-1)),super.collide(e),this.disabled=!0}isColliding(e){return!this.disabled&&super.isColliding(e)}}class L{points;constructor(e){this.points=e}draw(){fill(0,.25*255),beginShape();for(const[e,t]of this.points)vertex(e+1.5,t+1.5);endShape(),push(),fill(255),beginShape();for(const[e,t]of this.points)vertex(e,t);endShape(),pop()}collide(e,{projPoint:t,edge:s}){let i=p5.Vector.sub(e.pos,t),o=e.vel.mag(),l=Math.abs(e.vel.angleBetween(s));e.pos.add(p5.Vector.setMag(i,e.r-i.mag())),e.applyForce(i.setMag(2*Math.sin(l)*o))}isColliding(e){return f(e.pos,e.r,this.points)}}const O=.05;class A{points;constructor(e){this.points=e}draw(){push(),strokeWeight(16),stroke(217,210,111),fill(255,247,128),beginShape();for(const[e,t]of this.points)vertex(e,t);endShape(CLOSE),pop()}collide(e){e.vel.mult(1-O)}isColliding(e){return f(e.pos,e.r,this.points)||R(e.pos,this.points)}}const c=10;class _{x;y;w;h;force;colors;constructor(e,t,s,i,o){this.x=e,this.y=t,this.w=s,this.h=i,this.force=createVector(...o).mult(.35),this.colors=[];const l=color(100,.1*255),h=color(100,.5*255);for(let a=0;a<c;a++)this.colors.push(lerpColor(l,h,a/c))}draw(){const e=this.force.heading();push(),noFill(),strokeWeight(.1),stroke(0),rect(this.x,this.y,this.w,this.h),pop();let t=this.x+this.w/2,s=this.y+this.h/2;push(),fill(255),translate(t,s),this.drawGradient(e),rotate(e),triangle(-5,-10,5,0,-5,10),pop()}drawGradient(e){push(),scale(this.w,this.h),rotate(e);const t=1/c;for(let s=0;s<c;s++)fill(this.colors[s]),rect(-.5+t*s,-.5,t,1);pop()}isColliding(e){return S(e.pos.x,e.pos.y,e.r,this.x,this.y,this.w,this.h)}collide(e){e.applyForce(this.force)}}const N=.3,g=10;class z{start;end;r;hasTeleportedTo;portalTick;constructor(e,t,s,i){this.start=createVector(s,i),this.end=createVector(e,t),this.r=14,this.hasTeleportedTo=null,this.portalTick=[0,-g,-2*g]}draw(){push(),noFill(),strokeWeight(8),stroke(123,123,255,.4*255),circle(this.end.x,this.end.y,this.r*2+8),strokeWeight(4),stroke(123,123,255),circle(this.end.x,this.end.y,this.r*2),strokeWeight(8),stroke(219,141,15,.4*255),circle(this.start.x,this.start.y,this.r*2+8),strokeWeight(4),stroke(219,141,15),circle(this.start.x,this.start.y,this.r*2);const e=this.r*2-2+g/2;for(let t=0;t<3;t++){this.portalTick[t]+=N,this.portalTick[t]%=e;const i=max(this.portalTick[t],0);i>0&&(strokeWeight(1-i/e),stroke(219,141,15),circle(this.start.x,this.start.y,i),stroke(123,123,255),circle(this.end.x,this.end.y,i))}pop()}collide(e,t){let s,i;t=="start"?s=this.start.copy():s=this.end.copy(),this.hasTeleportedTo=="start"?i=this.start.copy():i=this.end.copy(),!(e.pos.dist(i)<=this.r+e.r)&&(e.pos=s)}isColliding(e){return p(e.pos,e.r,this.start,this.r)?(this.hasTeleportedTo||(this.hasTeleportedTo="end"),"end"):p(e.pos,e.r,this.end,this.r)?(this.hasTeleportedTo||(this.hasTeleportedTo="start"),"start"):(this.hasTeleportedTo=null,null)}}class F{points;render;cx;cy;startColor;toColor;constructor(e){this.points=e;let t=0,s=0;for(const[i,o]of e)t+=i,s+=o;t/=e.length,s/=e.length,this.render=[];for(const[i,o]of e)this.render.push([i-t,o-s]);this.cx=t,this.cy=s,this.startColor=color(61,137,255),this.toColor=color(0,73,186)}draw(){fill(40,150,255),push(),translate(this.cx,this.cy),scale(1);for(let e=-1;e<4;e++){let t;e==-1?t=color(255,247,128):t=lerpColor(this.startColor,this.toColor,e/4),fill(t),beginShape();for(const[s,i]of this.render)vertex(s,i);endShape(),scale(.9)}pop()}collide(e){e.pos=e.prevPos.copy(),e.vel.setMag(0)}isColliding(e){return f(e.pos,e.r,this.points)}}const U={Bouncer:E,Ice:D,PolygonWall:L,Sand:A,Slope:_,Teleporter:z,Wall:P,Water:F},k=V;function he(r){return r<k.length}function G(r){return r==-1?null:k[r]}function H(r){const[e,t]=r,s=U[e];return new s(...t)}class X{mousePressed(){}mouseReleased(){}mouseDragged(){}mouseWheel(e){}keyPressed(){}windowResized(){}}const y=2,u=10,Y=.03,d=30,v=20,$=500,w=200,b=200;class q{pos;ball;minx;miny;maxx;maxy;scale;aspectScale;absBounds;constructor(e,t,s,i,o){this.ball=e,this.pos=e.pos.copy(),this.absBounds={minx:t,miny:s,maxx:i,maxy:o},this.windowResized(),this.scale=1}draw(){this.pos.x=constrain(lerp(this.pos.x,this.ball.pos.x,.1),this.minx,this.maxx),this.pos.y=constrain(lerp(this.pos.y,this.ball.pos.y,.1),this.miny,this.maxy),translate(width/2,height/2),scale(this.aspectScale),scale(this.scale),translate(-this.pos.x,-this.pos.y);const e=createVector(mouseX,mouseY).sub(createVector(width/2,height/2)).div(this.aspectScale).div(this.scale).add(this.pos);window.mousex=e.x,window.mousey=e.y}scaleTo(e){this.scale=lerp(this.scale,e,.1)}windowResized(){const e=this.absBounds,t=(e.minx+e.maxx)/2,s=(e.miny+e.maxy)/2;this.minx=Math.min(e.minx+w,t),this.miny=Math.min(e.miny+b,s),this.maxx=Math.max(e.maxx-w,t),this.maxy=Math.max(e.maxy-b,s);const i=Math.min(width,height)/$;this.aspectScale=i}}class J{pos;r;constructor(e,t){this.pos=createVector(e,t),this.r=12}draw(){fill(0),circle(this.pos.x,this.pos.y,this.r*2)}checkBall(e,t){if(p(e.pos,e.r,this.pos,this.r)){e.vel.mag()<.001&&!e.inHole&&(t(),e.inHole=!0),e.vel.mult(.9);let s=p5.Vector.sub(this.pos,e.pos);e.applyForce(s.setMag(this.pos.dist(e.pos)*.1))}}}const K=.016;class Q{pos;vel;r;prevPos;constructor(e,t,s=10){this.pos=createVector(e,t),this.vel=createVector(0,0),this.r=s,this.prevPos=this.pos.copy()}draw(){fill(0,.25*255),circle(this.pos.x+1.5,this.pos.y+1.5,this.r*2),push(),fill(255),strokeWeight(1),stroke(0,.25*255),circle(this.pos.x,this.pos.y,this.r*2),pop()}applyForce(e){this.vel.add(e)}update(e,t=1){this.checkBounds(e),this.pos.add(p5.Vector.div(this.vel,t)),this.vel.mult(1-K/t),this.vel.limit(u),this.vel.mag()>0&&this.vel.mag()<Y&&(this.prevPos=this.pos.copy(),this.vel.setMag(0))}checkBounds(e){let{projPoint:t,edge:s}=f(this.pos,this.r,e);if(t){let i=p5.Vector.sub(this.pos,t),o=this.vel.mag(),l=Math.abs(this.vel.angleBetween(s));this.pos.add(p5.Vector.setMag(i,this.r-i.mag())),this.applyForce(i.setMag(2*Math.sin(l)*o))}}}const x=15,Z=10,j=.2;class ee extends Q{inHole=!1;dragStart;idleTick;constructor(e,t){super(e,t,10),this.idleTick=0}draw(){if(this.dragStart&&this.canShoot()&&this.showDrag(),super.draw(),this.dragStart&&(this.idleTick=0),!this.dragStart&&this.vel.mag()==0){this.idleTick+=j,this.idleTick%=x+Z;const e=this.idleTick;e<15&&(noFill(),stroke(255,sin((e-1)/x*PI)*128),strokeWeight(1+.5*sin((e/(x/2)-.5)*PI)),circle(this.pos.x,this.pos.y,this.r+20+e))}}showDrag(){let e=this.getDir();if(!(e.mag()<v)){fill(0,.25*255);for(let t=1;t<6;t++){const s=createVector().lerp(e,t/5);circle(s.x+this.pos.x,s.y+this.pos.y,5)}}}getDir(){return p5.Vector.sub(this.dragStart,createVector(mouseX,mouseY)).mult(2).limit(u*d)}canShoot(){return!this.inHole&&this.vel.mag()==0}}class te{nextLevel;camera;ball;hole;par;guideText;strokes;bounds;obstacles;constructor(e){this.nextLevel=e,this.strokes=0}loadLevel(e){if(e==null)return;this.ball=new ee(...e.ball),this.hole=new J(...e.hole),this.par=e.par,this.guideText=e.guideText||"";const t=e.bounds;this.bounds=t,this.obstacles=e.obstacles.map(h=>H(h));let s=t[0][0],i=t[0][1],o=t[0][0],l=t[0][1];for(let h=1;h<t.length;h++){let[a,n]=t[h];a<s&&(s=a),n<i&&(i=n),a>o&&(o=a),n>l&&(l=n)}this.camera=new q(this.ball,s,i,o,l)}draw(){background(161,207,161),push(),this.drawCamera(),this.drawGround();for(const e of this.obstacles)e.draw();this.hole.draw(),this.ball.draw(),this.drawBorders(),this.checkCollisions(),pop(),this.drawHUD()}drawGround(){push(),fill(94,230,83),strokeWeight(3),stroke(0,.25*255),beginShape();for(const[e,t]of this.bounds)vertex(e+1.5,t+1.5);endShape(CLOSE),pop()}drawBorders(){push(),noFill(),strokeWeight(3),stroke(255),beginShape();for(const[e,t]of this.bounds)vertex(e,t);endShape(CLOSE),pop()}drawCamera(){if(this.camera.draw(),this.ball.canShoot()&&this.ball.dragStart){const e=u*d/(this.ball.getDir().mag()+u*d);this.camera.scaleTo(e)}else this.camera.scaleTo(1)}drawHUD(){push(),fill(255),stroke(0),strokeWeight(3),textAlign(CENTER),textSize(30),text(this.guideText,0,50,width),textAlign(LEFT),textSize(20),text(`Stroke: ${this.strokes}
Par: ${this.par}`,10,height-60),pop()}checkCollisions(){for(let e=0;e<y;e++){this.ball.update(this.bounds,y);for(const t of this.obstacles){const s=t.isColliding(this.ball);s&&t.collide(this.ball,s)}}this.hole.checkBall(this.ball,()=>this.nextLevel())}debugMousePressed(){const e=createVector(6.6,8.7);console.log("ballPos:",this.ball.pos.toString(),`
`,"Vec:",e.toString(),`
`,`
-----
`),this.ball.vel=e}mousePressed(){this.ball.canShoot()&&(this.ball.dragStart=createVector(mouseX,mouseY))}mouseReleased(){if(!this.ball.canShoot()||!this.ball.dragStart)return;const e=this.ball.getDir();if(this.ball.dragStart=null,e.mag()<v)return;const t=e.div(d);this.ball.vel=t,this.strokes++}windowResized(){this.camera.windowResized()}}class se{x;y;w;h;constructor(e,t,s,i){this.x=e,this.y=t,this.w=s,this.h=i}mouseOver(){return B(mouseX,mouseY,this.x,this.y,this.w,this.h)}}class ie{text;x;y;w;h;onClick;constructor(e,t,s,i,o,l){this.text=e,this.x=t,this.y=s,this.w=i,this.h=o,this.onClick=l}mouseOver(){return B(mouseX,mouseY,this.x,this.y,this.w,this.h)}draw(){this.mouseOver()?fill(0,0,0,200):fill(0,0,0,128),rect(this.x,this.y,this.w,this.h),fill(255),textSize(30),textAlign(CENTER),text(this.text,this.x,this.y+this.h/2-15,this.w,this.h)}}class oe{gameScene;isPaused;pauseBtnArea;optionBtns;constructor(e){this.gameScene=e,this.isPaused=!1,this.initBtns()}initBtns(){this.pauseBtnArea=new se(width-30-10-2,8,34,34),this.optionBtns=[new ie("Resume",width/2-100,height/2,200,50,()=>{this.isPaused=!1})]}draw(){this.isPaused?this.drawPauseOverlay():this.drawPauseUI()}drawPauseUI(){push(),this.pauseBtnArea.mouseOver()?fill(180):fill(255),strokeWeight(4),stroke(0),rect(width-40,10,10,30),rect(width-20,10,10,30),pop()}drawPauseOverlay(){push(),noStroke(),fill(0,200),rect(0,0,width,height),textSize(60),fill(255),strokeWeight(3),stroke(100),textAlign(CENTER),text("PAUSED",width/2,100),text(`level: ${this.gameScene.levelIdx}`,width/2,height/2);for(const e of this.optionBtns)e.draw();pop()}keyPressed(){key=="Escape"&&(this.isPaused=!this.isPaused,this.isPaused&&(this.gameScene.gameRenderer.ball.dragStart=null))}mousePressed(){if(!this.isPaused)this.pauseBtnArea.mouseOver()&&(this.isPaused=!0);else{for(const e of this.optionBtns)if(e.mouseOver()){e.onClick();return}this.isPaused=!1}}windowResized(){this.initBtns()}}class ae extends X{sceneManager;gameRenderer;pauseMenu;levelIdx;constructor(e,t=0){super(),this.sceneManager=e,this.gameRenderer=new te(()=>this.nextLevel()),this.pauseMenu=new oe(this),this.levelIdx=t,this.loadLevel(G(t))}loadLevel(e){this.gameRenderer.loadLevel(e)}draw(){this.gameRenderer.draw(),this.pauseMenu.draw()}nextLevel(){this.sceneManager.nextLevel(this.gameRenderer.strokes,this.levelIdx+1)}mousePressed(){this.pauseMenu.mousePressed(),this.pauseMenu.isPaused||this.gameRenderer.mousePressed()}mouseReleased(){this.pauseMenu.isPaused||this.gameRenderer.mouseReleased()}keyPressed(){this.pauseMenu.keyPressed()}windowResized(){this.pauseMenu.windowResized(),this.gameRenderer.windowResized()}}class ne{progress;direction;onDone;constructor(){this.progress=0,this.direction=0}draw(){fill(255,this.progress),rect(0,0,width,height),this.direction!=0&&this.update()}update(){this.progress+=this.direction*5,this.progress==300&&(this.onDone(),this.direction=-1),this.progress<0&&this.end()}end(){this.direction=0,this.progress=0}transition(e){this.direction=1,this.onDone=e}}export{Q as B,ae as G,J as H,D as I,ee as M,L as P,X as S,ne as T,F as W,P as a,E as b,_ as c,A as d,z as e,he as l,le as p,U as s};
