import{S as c,p as g,G as o,g as d,T as m,l as x,a as S}from"./transitionManager-6wVf0hdx.js";import"./p5-CLnVVuBm.js";class f extends c{sceneManager;constructor(e){super(),this.sceneManager=e}draw(){background(123,255,123),textSize(80),textStyle(NORMAL),textAlign(CENTER),fill(39,58,227),strokeWeight(4),stroke(17,33,171),text("You beat the game!",width/2,100),textSize(30),fill(237,153,57),stroke(189,121,43),text(`Thanks for playing!
Credits: Coder100`,width/2,500),strokeWeight(8),stroke(191,150,0),fill(255,240,79),rect(width/2-300,height/2-100,600,160),fill(201,167,64),textSize(50),textStyle(BOLD),textAlign(LEFT),noStroke(),text("STATS",width/2-300+16,height/2-100+16+40);const e=this.sceneManager.stats;textSize(25),textStyle(NORMAL),text(`Total strokes: ${e.totalStrokes}
Hole in ones: ${e.holeInOnes}`,width/2-300+16,height/2-100+16+80)}}class p{x;y;w;h;constructor(e,t,i,r){this.x=e,this.y=t,this.w=i,this.h=r}mouseOver(){return g(mouseX,mouseY,this.x,this.y,this.w,this.h)}}class l{text;x;y;w;h;onClick;constructor(e,t,i,r){this.text=e;const a=70,h=500;this.x=t-h/2,this.y=i-a/2,this.w=h,this.h=a,this.onClick=r}mouseOver(){return g(mouseX,mouseY,this.x,this.y,this.w,this.h)}draw(){strokeWeight(4),stroke(70),this.mouseOver()?fill(0,0,0,200):fill(0,0,0,128),rect(this.x,this.y,this.w,this.h),fill(255),textSize(30),textAlign(CENTER),text(this.text,this.x,this.y+this.h/2-15,this.w,this.h)}}let w=0;class k{gameScene;isPaused;pauseBtnArea;optionBtns;constructor(e){this.gameScene=e,this.isPaused=!1,this.initBtns()}initBtns(){this.pauseBtnArea=new p(width-30-10-2,8,34,34),this.optionBtns=[new l("Resume",width/2,height/4+50,()=>{}),new l("Restart",width/2,height/4+140,()=>{this.gameScene.restartLevel()})]}draw(){fill(255),textSize(50),frameCount%5==0&&(w=frameRate()),text(w.toFixed(),0,50),this.isPaused?this.drawPauseOverlay():this.drawPauseUI()}drawPauseUI(){push(),this.pauseBtnArea.mouseOver()?fill(180):fill(255),strokeWeight(4),stroke(0),rect(width-30,10,10,20),rect(width-20,10,10,20),pop()}drawPauseOverlay(){push(),noStroke(),fill(0,200),rect(0,0,width,height),textSize(60),fill(255),strokeWeight(3),stroke(100),textAlign(CENTER),text("PAUSED",width/2,100),textSize(30),text(`level: ${this.gameScene.levelIdx}`,width/2,height/2-200);for(const e of this.optionBtns)e.draw();pop()}keyPressed(){key=="Escape"&&(this.isPaused=!this.isPaused,this.isPaused&&(this.gameScene.gameRenderer.ball.dragStart=null))}mousePressed(){if(!this.isPaused)this.pauseBtnArea.mouseOver()&&(this.isPaused=!0);else{for(const e of this.optionBtns)e.mouseOver()&&e.onClick();this.isPaused=!1}}windowResized(){this.initBtns()}}class u extends c{sceneManager;gameRenderer;pauseMenu;retries;levelIdx;constructor(e,t=0){super(),this.sceneManager=e,this.gameRenderer=new o(d(t),()=>this.nextLevel()),this.pauseMenu=new k(this),this.retries=0,this.levelIdx=t}draw(){this.gameRenderer.draw(),this.pauseMenu.draw()}nextLevel(){this.sceneManager.nextLevel({strokes:this.gameRenderer.strokes,retries:this.retries},this.levelIdx+1)}restartLevel(){this.gameRenderer=new o(d(this.levelIdx),()=>this.nextLevel()),this.retries++}mousePressed(){this.pauseMenu.mousePressed(),this.pauseMenu.isPaused||this.gameRenderer.mousePressed()}mouseReleased(){this.pauseMenu.isPaused||this.gameRenderer.mouseReleased()}keyPressed(){this.pauseMenu.keyPressed()}windowResized(){this.pauseMenu.windowResized(),this.gameRenderer.windowResized()}}class R{scene;transitionManager;stats;constructor(){this.scene=new u(this,0),this.transitionManager=new m,this.stats=new v}draw(){this.scene.draw(),this.transitionManager.draw()}setScene(e){this.transitionManager.transition(()=>{this.scene=e})}nextLevel(e,t){if(this.stats.recordLevelStats(e),x(t)){const i=new u(this,t);this.setScene(i)}else{const i=new f(this);this.setScene(i)}}}class v{holeInOnes;totalStrokes;retries;constructor(){this.holeInOnes=0,this.totalStrokes=0,this.retries=0}recordLevelStats({strokes:e,retries:t}){e==1&&this.holeInOnes++,this.retries+=t,this.totalStrokes+=e}}window.p5=S;let n;window.setup=()=>{const s=createCanvas(windowWidth,windowHeight);noStroke(),s.elt.addEventListener("touchmove",e=>{e.preventDefault()}),n=new R};window.draw=()=>{n.draw()};window.mousePressed=()=>{n.scene.mousePressed()};window.mouseReleased=()=>{n.scene.mouseReleased()};window.keyPressed=()=>{n.scene.keyPressed()};window.touchStarted=window.mousePressed;window.touchEnded=window.mouseReleased;window.windowResized=()=>{resizeCanvas(windowWidth,windowHeight),n.scene.windowResized()};
