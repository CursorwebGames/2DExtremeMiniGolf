import{W as d,G as p,H as w,M as l,I as u,p as K}from"./gameManager-TJtMJds7.js";class h{constructor(t,o,s){this.pos=createVector(t,o),this.r=4,this.selected=!1,this.prevPos=createVector(t,o),this.parent=s}draw(){this.update(),push(),this.selected||this.pos.dist(mousePos)<this.r?(strokeWeight(1),stroke(0),fill(0,138,124)):fill(0,186,168),circle(this.pos.x,this.pos.y,this.r*2),pop()}update(){this.prevPos=this.pos.copy(),this.selected&&(this.pos=mousePos,this.parent.update(this,p5.Vector.sub(this.pos,this.prevPos)))}check(){return!mouseIsPressed&&this.selected&&(this.selected=!1),mouseIsPressed&&!this.selected&&this.pos.dist(mousePos)<this.r&&(this.selected=!0),this.selected}}class a{constructor(t,o=!1){this.obj=t,this.knot=new h(t.pos.x,t.pos.y,this),o&&staticKnots.push(this.knot)}draw(){this.obj.draw(),this.knot.draw()}update(){this.obj.pos=this.knot.pos}}class b{constructor(t){this.obj=t,this.knots=[new h(width/2-50,height/2,this),new h(width/2+50,height/2,this),new h(width/2,height/2+50,this)],this.centerKnot=new h(0,0,this),main.staticKnots.push(...this.knots,this.centerKnot),this.update()}draw(){this.obj.draw();for(const t of this.knots)t.draw();this.centerKnot.draw()}convertKnots(){return this.knots.map(t=>[t.pos.x,t.pos.y])}update(t,o){if(t==this.centerKnot)for(const s of this.knots)s.pos.add(o);else{let s=0,i=0;for(const e of this.knots)s+=e.pos.x,i+=e.pos.y;s/=this.knots.length,i/=this.knots.length,this.centerKnot.pos=createVector(s,i)}if(this.obj instanceof d){const s=this.centerKnot.pos.x,i=this.centerKnot.pos.y;this.obj.cx=s,this.obj.cy=i;const e=[];for(const r of this.knots)e.push([r.pos.x-s,r.pos.y-i]);this.obj.render=e}this.obj.points=this.convertKnots()}}class c extends h{constructor(t,o,s,i,e){super(t,o,s),this.originKnot=i,this.axis=e}originUpdate(t){this.pos.add(t)}update(){if(this.prevPos=this.pos.copy(),this.selected){const t=mousePos,o=p5.Vector.sub(t,this.originKnot.pos),s=p5.Vector.setMag(this.axis,o.dot(this.axis)/this.axis.mag()).add(this.originKnot.pos);this.pos=s,this.parent.update(this,p5.Vector.sub(this.pos,this.prevPos))}}}class f{constructor(t){this.obj=t,this.posKnot=new h(this.obj.x,this.obj.y,this),this.widthKnot=new c(this.obj.x+this.obj.w,this.obj.y,this,this.posKnot,createVector(1,0)),this.heightKnot=new c(this.obj.x,this.obj.y+this.obj.h,this,this.posKnot,createVector(0,1)),main.staticKnots.push(this.posKnot,this.widthKnot,this.heightKnot)}draw(){this.obj.draw(),this.posKnot.draw(),this.widthKnot.draw(),this.heightKnot.draw()}update(t,o){t==this.posKnot&&(this.widthKnot.originUpdate(o),this.heightKnot.originUpdate(o));const s=this.posKnot.pos;this.obj.x=s.x,this.obj.y=s.y,this.obj.w=this.widthKnot.pos.x-s.x,this.obj.h=this.heightKnot.pos.y-s.y}}class k extends p{constructor(){super(),this.hasSelected=!1,this.staticKnots=[]}init(){this.hole=new a(new w(width/2,height/2)),this.mainb=new a(new l(width/2,height/2)),this.staticObjs.push(new b(new d([])),new f(new u(50,50,100,20))),this.balls.push(this.mainb)}draw(){background(123,255,123);for(const t of this.staticObjs)t.draw();this.hole.draw();for(const t of this.balls)t.draw();this.hasSelected||this.checkKnots()}checkKnots(){for(let t=this.balls.length-1;t>=0;t--)if(this.balls[t].knot.check()){this.hasSelected=!0;return}this.hole.knot.check()&&(this.hasSelected=!0);for(let t=this.staticKnots.length-1;t>=0;t--)if(this.staticKnots[t].check()){this.hasSelected=!0;return}}}window.p5=K;window.mousex=void 0;window.mousey=void 0;window.main=new k;window.setup=()=>{noStroke(),createCanvas(900,900).parent(document.querySelector(".canvas-content")),main.init()};window.draw=()=>{window.mousePos=createVector(mouseX,mouseY),main.draw()};window.mouseReleased=()=>{main.hasSelected=!1};
